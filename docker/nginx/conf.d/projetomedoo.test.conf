# Define o upstream para o serviço PHP-FPM do FluentPDO
# 'php-fluentpdo' é o nome do serviço definido no docker-compose.yml
upstream php_medoo_fpm {
    server php-medoo:9000; # Aponta para o serviço php-medoo
}

# Servidor para redirecionamento HTTP para HTTPS
server {
    listen 80;
    server_name projetomedoo.test;

    # Forçar HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Servidor principal HTTPS
server {
    listen 443 ssl http2; # Escuta na porta 443 com SSL e HTTP/2
    server_name projetomedoo.test;

    # Configuração do SSL
    # Estes arquivos de certificado ainda não existem, vamos gerá-los depois.
    # O caminho é dentro do contêiner Nginx, conforme mapeado no docker-compose.yml
    ssl_certificate /etc/nginx/ssl/projetomedoo.test.crt;
    ssl_certificate_key /etc/nginx/ssl/projetomedoo.test.key;

    # Configurações de segurança SSL (exemplo)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off; # Ou on, dependendo da sua preferência de cifras
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # Cabeçalhos de Segurança (ajuste o CSP conforme sua aplicação)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), midi=(), camera=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=(), payment=()" always;

    # Raiz do projeto e arquivos de índice
    # O caminho é dentro do contêiner Nginx, que por sua vez é um volume do seu host
    root /var/www/html/public/medoo;
    index index.php index.html index.htm;

    # Regras de localização
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Processamento de arquivos PHP
    location ~ \.php$ {
        try_files $uri =404; # Garante que o arquivo PHP exista
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php_medoo_fpm; # Nome do upstream definido acima
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # fastcgi_param PHP_VALUE "error_log=/var/log/nginx/fluentpdo_php_errors.log"; # Opcional: log de erro PHP específico
        include fastcgi_params; # Inclui parâmetros FastCGI padrão
    }

    # Proteção contra acesso a arquivos ocultos e de configuração
    location ~ /\.ht {
        deny all;
    }
    location ~ /\.git {
        deny all;
    }
    location ~ /\.env {
        deny all;
    }

    # Cache para arquivos estáticos
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 1M; # Cache de 1 mês
        access_log off; # Desliga logs de acesso para arquivos estáticos
        add_header Cache-Control "public";
    }

    # Logs de acesso e erro (opcional, pode ser útil para debug)
    access_log /var/log/nginx/projetomedoo.test_access.log;
    error_log /var/log/nginx/projetomedoo.test_error.log;
}